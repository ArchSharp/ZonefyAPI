name: Build and Deploy .NET Docker Application

on:
  push:
    branches:
      - main  # Trigger on pushing to the 'main' branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up .NET SDK
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0'  # Specify the .NET version

    - name: Create .env file
      run: |
          echo "GOOGLE_DRIVE_SERVICE_ACCOUNT_JSON=${{ secrets.GOOGLE_DRIVE_SERVICE_ACCOUNT_JSON }}" >> .env
          echo "${{ secrets.GOOGLE_DRIVE_SERVICE_ACCOUNT_JSON }}" > service-account.json
    - name: Set environment variable
      run: echo "GOOGLE_APPLICATION_CREDENTIALS=$(mktemp)" >> $GITHUB_ENV
    - name: Write service account JSON
      run: echo "${{ secrets.GOOGLE_DRIVE_SERVICE_ACCOUNT_JSON }}" > $GOOGLE_APPLICATION_CREDENTIALS

    - name: Restore dependencies
      run: dotnet restore

    - name: Build the project
      run: dotnet build --configuration Release

    - name: Publish the project
      run: dotnet publish --configuration Release --output ./out

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Build and push Docker image
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        docker build -t archraphr/zonefyapi:latest .
        docker push archraphr/zonefyapi:latest

  deploy:
    runs-on: self-hosted
    needs: build  # Make sure deployment runs after the build job finishes

    steps:
    - name: Login to docker hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
    - name: Clean Up Docker Resources
      run: |
          docker system prune -a -f
          docker volume prune -f
          sudo rm -rf /var/lib/docker/tmp/*
    - name: Pull docker image
      run: docker pull archraphr/zonefyapi:latest
    - name: Delete old container
      run: docker rm -f zonefy-container
    - name: Run docker container
      run: docker run -d -p 5018:8080 --name zonefy-container archraphr/zonefyapi
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
